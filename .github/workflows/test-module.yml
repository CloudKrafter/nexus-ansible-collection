name: Module Test

on:
  push:
  pull_request:
    types:
      - review_requested
  workflow_dispatch:

jobs:
  module:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: |
            3.8
            3.9
            3.10
            3.11
            3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Install the local collection
          ansible-galaxy collection install . --force

      - name: Run Sanity Tests
        run: |
          cd /home/runner/.ansible/collections/ansible_collections/cloudkrafter/nexus
          ansible-test sanity plugins/modules/download.py tests/
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

      - name: Run Unit tests
        run: |
          cd /home/runner/.ansible/collections/ansible_collections/cloudkrafter/nexus
          ansible-test units --docker default --coverage
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

      - name: Generate code coverage report
        run: |
          cd /home/runner/.ansible/collections/ansible_collections/cloudkrafter/nexus
          ansible-test coverage xml

      - uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            ~/.ansible/collections/ansible_collections/cloudkrafter/nexus/tests/output

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          fail_ci_if_error: true
          #directory: /home/runner/.ansible/collections/ansible_collections/cloudkrafter/nexus/tests/output/junit
          files: ./tests/output/junit/*.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload test results to Codecov root
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          fail_ci_if_error: true
          #directory: /root/ansible_collections/cloudkrafter/nexus/tests/output/junit
          files: ./tests/output/junit/*.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          directory: /home/runner/.ansible/collections/ansible_collections/cloudkrafter/nexus/tests/output/
          files: ./reports/coverage.xml
          slug: CloudKrafter/nexus-ansible-collection
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run Download Module for latest
        run: |
          cd /home/runner/.ansible/collections/ansible_collections/cloudkrafter/nexus
          ANSIBLE_LIBRARY=./plugins/modules ansible -m download -a 'state=latest dest=/tmp/nexus.tar.gz' localhost
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
      
      - name: Run Download Module for specific version
        run: |
          cd /home/runner/.ansible/collections/ansible_collections/cloudkrafter/nexus
          ANSIBLE_LIBRARY=./plugins/modules ansible -m download -a 'state=present version=3.77.1-01 dest=/tmp/nexus.tar.gz' localhost
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

      - name: Run playbook in check mode
        run: |
          cd /home/runner/work/nexus-ansible-collection/nexus-ansible-collection
          PYTHONPATH=$PWD ANSIBLE_LIBRARY=$PWD/plugins/modules ansible-playbook tests/local_test.yml --check
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

      - name: Run playbook
        run: |
          cd /home/runner/work/nexus-ansible-collection/nexus-ansible-collection
          PYTHONPATH=$PWD ANSIBLE_LIBRARY=$PWD/plugins/modules ansible-playbook tests/local_test.yml
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

      - name: Run playbook in check mode (Idempotance check)
        run: |
          cd /home/runner/work/nexus-ansible-collection/nexus-ansible-collection
          PYTHONPATH=$PWD ANSIBLE_LIBRARY=$PWD/plugins/modules ansible-playbook tests/local_test.yml --check
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

      - name: Run playbook (Idempotance check)
        run: |
          cd /home/runner/work/nexus-ansible-collection/nexus-ansible-collection
          PYTHONPATH=$PWD ANSIBLE_LIBRARY=$PWD/plugins/modules ansible-playbook tests/local_test.yml
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
