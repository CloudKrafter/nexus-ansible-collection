- name: Get all blobstores
  ansible.builtin.uri:
    url: "{{ nexus_api_scheme }}://{{ nexus_hostname }}:{{ nexus_api_port }}/service/rest/v1/blobstores"
    method: GET
    validate_certs: "{{ nexus_api_validate_certs }}"
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
    timeout: "{{ nexus_api_timeout }}"
  register: all_blobstores
  tags: blobstores

- name: Determine blobstores to create
  ansible.builtin.set_fact:
    nxs_create_blobstores: "{{ nexus_blobstores | rejectattr('name', 'in', all_blobstores.json | map(attribute='name') | list) | list }}"
  tags: blobstores

- name: Determine blobstores to delete
  ansible.builtin.set_fact:
    nxs_delete_blobstores: "{{ all_blobstores.json | rejectattr('name', 'in', nexus_blobstores | map(attribute='name') | list) | list }}"
  tags: blobstores

- name: Show blobstores to create
  ansible.builtin.debug:
    var: nxs_create_blobstores | length
  tags: blobstores

- name: Show blobstores to delete
  ansible.builtin.debug:
    var: nxs_delete_blobstores | length
  tags: blobstores

- name: Create configured Blobstores using Nexus API
  ansible.builtin.include_tasks: blobstores-api.yml
  vars:
    nexus_blobstores: "{{ item | default([]) }}"
    method: POST
  with_items:
    - "{{ nxs_create_blobstores | default([]) }}"
  when: nxs_create_blobstores | length > 0
  tags: blobstores

# - name: Update configured Blobstores using Nexus API
#   ansible.builtin.include_tasks: blobstores-api.yml
#   vars:
#     nexus_roles: "{{ item | default([]) }}"
#     method: PUT
#   with_items:
#     - "{{ nxs_update_blobstores | default([]) }}"
#   when: nxs_update_blobstores | length > 0
#   tags: blobstores

- name: Delete Blobstores using Nexus API
  ansible.builtin.include_tasks: blobstores-api.yml
  vars:
    nexus_blobstores: "{{ item | default([]) }}"
    method: DELETE
  with_items:
    - "{{ nxs_delete_blobstores | default([]) }}"
  when: nxs_delete_blobstores | length > 0
  tags: blobstores
