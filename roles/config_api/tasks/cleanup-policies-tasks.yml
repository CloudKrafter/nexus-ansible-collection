- name: Normalize cleanup policies to ensure they are compatible with Nexus API
  ansible.builtin.set_fact:
    nexus_repos_cleanup_policies_normalized: >-
      {{
        nexus_repos_cleanup_policies | map('cloudkrafter.nexus.normalize_cleanup_policies') | list
      }}
  tags: cleanup-policies

- name: Get all Cleanup policies
  ansible.builtin.uri:
    url: "{{ nexus_api_scheme }}://{{ nexus_hostname }}:{{ nexus_api_port }}/service/rest/v1/cleanup-policies"
    method: GET
    validate_certs: false
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
  register: __nxs_crnt_cln_plcy__
  tags: cleanup-policies

- name: Determine cleanup policies to create
  ansible.builtin.set_fact:
    nxs_create_cleanuppolicies: "{{ nexus_repos_cleanup_policies_normalized | rejectattr('name', 'in', __nxs_crnt_cln_plcy__.json | map(attribute='name') | list) | list }}"
  tags: cleanup-policies

- name: Determine cleanup policies to delete
  ansible.builtin.set_fact:
    nxs_delete_cleanuppolicies: "{{ __nxs_crnt_cln_plcy__.json | rejectattr('name', 'in', nexus_repos_cleanup_policies_normalized | map(attribute='name') | list) | list }}"
  tags: cleanup-policies

- name: Compare cleanup policies for changes
  ansible.builtin.set_fact:
    nxs_update_cleanuppolicies: "{{ nxs_update_cleanuppolicies + [item] }}"
  loop: "{{ nexus_repos_cleanup_policies_normalized | list }}"
  when: >
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first) is not defined or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).criteriaLastBlobUpdated | default(omit) != item.criteriaLastBlobUpdated | default(None) or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).criteriaLastDownloaded | default(omit) != item.criteriaLastDownloaded | default(None) or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).criteriaAssetRegex | default(omit) != item.criteriaAssetRegex | default(None) or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).criteriaReleaseType | default(omit) != item.criteriaReleaseType | default(None) or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).notes | default(omit) != item.notes | default(None) or
    ( __nxs_crnt_cln_plcy__.json | selectattr('name', 'equalto', item.name) | first).format | default(omit) != item.format | default(None)
  tags: cleanup-policies

- name: Show nxs_create_cleanuppolicies
  ansible.builtin.debug:
    var: nxs_create_cleanuppolicies | length
  tags: cleanup-policies

- name: Show nxs_update_cleanuppolicies
  ansible.builtin.debug:
    var: nxs_update_cleanuppolicies | length
  tags: cleanup-policies

- name: Show nxs_delete_cleanuppolicies
  ansible.builtin.debug:
    var: nxs_delete_cleanuppolicies | length
  tags: cleanup-policies

- name: Create configured Cleanup Policies using Nexus API
  ansible.builtin.include_tasks: cleanup-policies-api.yml
  vars:
    policies: "{{ item | default([]) }}"
    method: POST
  with_items:
    - "{{ nxs_create_cleanuppolicies | default([]) }}"
  when: nxs_create_cleanuppolicies | length > 0
  tags: cleanup-policies

- name: Update configured Cleanup Policies using Nexus API
  ansible.builtin.include_tasks: cleanup-policies-api.yml
  vars:
    policies: "{{ item | default([]) }}"
    method: PUT
  with_items:
    - "{{ nxs_update_cleanuppolicies | default([]) }}"
  when: nxs_update_cleanuppolicies | length > 0
  tags: cleanup-policies

- name: Delete Cleanup Policies using Nexus API
  ansible.builtin.include_tasks: cleanup-policies-api.yml
  vars:
    policies: "{{ item | default([]) }}"
    method: DELETE
  with_items:
    - "{{ nxs_delete_cleanuppolicies | default([]) }}"
  when: nxs_delete_cleanuppolicies | length > 0
  tags: cleanup-policies
