- name: Normalize P2 proxy repositories
  ansible.builtin.set_fact:
    nexus_repos_p2_proxy_normalized: >
      {{ nexus_repos_p2_proxy | cloudkrafter.nexus.normalize_repositories(
          nexus_repos_global_defaults,
          nexus_repos_type_defaults,
          nexus_repos_format_defaults,
          'proxy',
          'p2',
          legacy_field_map
        ) }}
  tags:
    - p2
    - p2-proxy

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing p2 repositories
  ansible.builtin.set_fact:
    __nxs_crnt_p2_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'p2') | selectattr('type', 'equalto', 'proxy') | list }}"
  tags: repositories

- name: Determine p2 repositories to create
  ansible.builtin.set_fact:
    nxs_create_p2_proxy_repos: "{{ nexus_repos_p2_proxy_normalized | rejectattr('name', 'in', __nxs_crnt_p2_prxy__ | map(attribute='name') | list) | list }}"
  tags: repositories

- name: Determine p2 repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_p2_proxy_repos: "{{ __nxs_crnt_p2_prxy__ | rejectattr('name', 'in', nexus_repos_p2_proxy_normalized | map(attribute='name') | list) | list }}"
  tags: repositories

- name: Compare p2 proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_p2_proxy_repos: "{{ nxs_update_p2_proxy_repos + [item] }}"
  loop: "{{ nexus_repos_p2_proxy_normalized | rejectattr('name', 'in', nxs_create_p2_proxy_repos | map(attribute='name') | list) | list }}"
  # TODO: implement replication
  when: >
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('p2') != item.format | default('p2') or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.authentication is not none and
        item.httpClient.authentication is none
    ) or
    (
        (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.authentication is none and
        item.httpClient.authentication is not none
    ) or
    (
        (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.authentication is not none and
        item.httpClient.authentication is not none and
        (
            (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.authentication.type | default(None) != item.httpClient.authentication.type | default(None) or
            (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.authentication.username | default(None) != item.httpClient.authentication.username | default(None) or
            (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.authentication.ntlmHost | default(None) != item.httpClient.authentication.ntlmHost | default(None) or
            (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.authentication.ntlmDomain | default(None) != item.httpClient.authentication.ntlmDomain | default(None)
        )
    ) or
    (__nxs_crnt_p2_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)
  tags:
    - p2
    - p2-proxy

- name: Show nxs_create_p2_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_p2_proxy_repos
  when: nexus_config_dry_run
  changed_when: nxs_create_p2_proxy_repos | length > 0
  tags:
    - p2
    - p2-proxy

- name: Show nxs_update_p2_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_p2_proxy_repos
  when: nexus_config_dry_run
  changed_when: nxs_update_p2_proxy_repos | length > 0
  tags:
    - p2
    - p2-proxy

- name: Show nxs_delete_p2_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_p2_proxy_repos
  when: nexus_config_dry_run
  changed_when: nxs_delete_p2_proxy_repos | length > 0
  tags:
    - p2
    - p2-proxy

- name: Apply P2 repository changes
  block:
    - name: Create configured p2 Proxy repositories using Nexus API
      ansible.builtin.include_tasks: repositories-api.yml
      vars:
        repos: "{{ item | default([]) }}"
        format: p2
        type: proxy
        method: POST
      with_items:
        - "{{ nxs_create_p2_proxy_repos | default([]) }}"
      when: nxs_create_p2_proxy_repos | length > 0
      tags:
        - p2
        - p2-proxy

    - name: Update configured p2 Proxy repositories using Nexus API
      ansible.builtin.include_tasks: repositories-api.yml
      vars:
        repos: "{{ item | default([]) }}"
        format: p2
        type: proxy
        method: PUT
      with_items:
        - "{{ nxs_update_p2_proxy_repos | default([]) }}"
      when: nxs_update_p2_proxy_repos | length > 0
      tags:
        - p2
        - p2-proxy

    - name: Delete p2 Proxy repositories using Nexus API
      ansible.builtin.include_tasks: repositories-api.yml
      vars:
        repos: "{{ nxs_delete_p2_proxy_repos | default([]) }}"
        format: p2
        type: proxy
        method: DELETE
      with_items:
        - "{{ nxs_delete_p2_proxy_repos | default([]) }}"
      when: nxs_delete_p2_proxy_repos | length > 0
      tags:
        - p2
        - p2-proxy
  when: not nexus_config_dry_run
  tags:
    - p2
    - p2-proxy
