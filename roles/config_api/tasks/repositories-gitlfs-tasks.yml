- name: Process definitions for gitlfs
  block:
    - name: Apply defaults to gitlfs hosted repos
      ansible.builtin.set_fact:
        nxs_desired_gitlfs_hosted_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_gitlfs_hosted -%}
            {%- set combined_repo = __nexus_repos_gitlfs_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing GitLFS repositories
  ansible.builtin.set_fact:
    __nxs_crnt_gitlfs_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'gitlfs') | selectattr('type', 'equalto', 'hosted') | list }}"

- name: Determine GitLFS repositories to create
  ansible.builtin.set_fact:
    nxs_create_gitlfs_hosted_repos: "{{ nxs_desired_gitlfs_hosted_repos | rejectattr('name', 'in', __nxs_crnt_gitlfs_hstd__ | map(attribute='name') | list) | list }}"

- name: Determine GitLFS repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_gitlfs_hosted_repos: "{{ __nxs_crnt_gitlfs_hstd__ | rejectattr('name', 'in', nxs_desired_gitlfs_hosted_repos | map(attribute='name') | list) | list }}"

- name: Compare GitLFS hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_gitlfs_hosted_repos: "{{ nxs_update_gitlfs_hosted_repos + [item] }}"
  loop: "{{ nxs_desired_gitlfs_hosted_repos | list }}"
  when: >
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('gitlfs') != item.format | default('gitlfs') or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_gitlfs_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false)

- name: Show nxs_create_gitlfs_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_gitlfs_hosted_repos | length

- name: Show nxs_update_gitlfs_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_gitlfs_hosted_repos | length

- name: Show nxs_delete_gitlfs_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_gitlfs_hosted_repos | length

- name: Create configured GitLFS Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: gitlfs
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_gitlfs_hosted_repos | default([]) }}"
  when: nxs_create_gitlfs_hosted_repos | length > 0

- name: Update configured GitLFS Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: gitlfs
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_gitlfs_hosted_repos | default([]) }}"
  when: nxs_update_gitlfs_hosted_repos | length > 0

- name: Delete GitLFS Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_gitlfs_hosted_repos | default([]) }}"
    format: gitlfs
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_gitlfs_hosted_repos | default([]) }}"
  when: nxs_delete_gitlfs_hosted_repos | length > 0
