- name: Process definitions for go
  block:
    - name: Apply defaults to go proxy repos
      ansible.builtin.set_fact:
        nxs_desired_go_proxy_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_go_proxy -%}
            {%- set combined_repo = __nexus_repos_go_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to go group repos
      ansible.builtin.set_fact:
        nxs_desired_go_group_repos: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_go_group -%}
            {%- set combined_repo = __nexus_repos_go_group_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing go repositories
  ansible.builtin.set_fact:
    __nxs_crnt_go_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'go') | selectattr('type', 'equalto', 'proxy') | list }}"
    __nxs_crnt_go_grp__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'go') | selectattr('type', 'equalto', 'group') | list }}"

- name: Determine go repositories to create
  ansible.builtin.set_fact:
    nxs_create_go_proxy_repos: "{{ nxs_desired_go_proxy_repos | rejectattr('name', 'in', __nxs_crnt_go_prxy__ | map(attribute='name') | list) | list }}"
    nxs_create_go_group_repos: "{{ nxs_desired_go_group_repos | rejectattr('name', 'in', __nxs_crnt_go_grp__ | map(attribute='name') | list) | list }}"

- name: Determine go repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_go_proxy_repos: "{{ __nxs_crnt_go_prxy__ | rejectattr('name', 'in', nxs_desired_go_proxy_repos | map(attribute='name') | list) | list }}"
    nxs_delete_go_group_repos: "{{ __nxs_crnt_go_grp__ | rejectattr('name', 'in', nxs_desired_go_group_repos | map(attribute='name') | list) | list }}"

- name: Compare go proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_go_proxy_repos: "{{ nxs_update_go_proxy_repos + [item] }}"
  loop: "{{ nxs_desired_go_proxy_repos | list }}"
  when: >
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('go') != item.format | default('go') or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_go_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)

- name: Compare go group repositories for changes
  ansible.builtin.set_fact:
    nxs_update_go_group_repos: "{{ nxs_update_go_group_repos + [item] }}"
  loop: "{{ nxs_desired_go_group_repos | list }}"
  when: >
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).format | default('go') != item.format | default('go') or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).type | default('group') != item.type | default('group') or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_go_grp__ | selectattr('name', 'equalto', item.name) | first).group.memberNames | default([]) | sort != item.group.memberNames | default([]) | sort

- name: Show nxs_create_go_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_go_proxy_repos | length

- name: Show nxs_create_go_group_repos
  ansible.builtin.debug:
    var: nxs_create_go_group_repos | length

- name: Show nxs_update_go_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_go_proxy_repos | length

- name: Show nxs_update_go_group_repos
  ansible.builtin.debug:
    var: nxs_update_go_group_repos | length

- name: Show nxs_delete_go_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_go_proxy_repos | length

- name: Show nxs_delete_go_group_repos
  ansible.builtin.debug:
    var: nxs_delete_go_group_repos | length

- name: Create configured go Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: go
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_go_proxy_repos | default([]) }}"
  when: nxs_create_go_proxy_repos | length > 0

- name: Create configured go Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: go
    type: group
    method: POST
  with_items:
    - "{{ nxs_create_go_group_repos | default([]) }}"
  when: nxs_create_go_group_repos | length > 0

- name: Update configured go Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: go
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_go_proxy_repos | default([]) }}"
  when: nxs_update_go_proxy_repos | length > 0

- name: Update configured go Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: go
    type: group
    method: PUT
  with_items:
    - "{{ nxs_update_go_group_repos | default([]) }}"
  when: nxs_update_go_group_repos | length > 0

- name: Delete go Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_go_proxy_repos | default([]) }}"
    format: go
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_go_proxy_repos | default([]) }}"
  when: nxs_delete_go_proxy_repos | length > 0

- name: Delete go Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_go_group_repos | default([]) }}"
    format: go
    type: group
    method: DELETE
  with_items:
    - "{{ nxs_delete_go_group_repos | default([]) }}"
  when: nxs_delete_go_group_repos | length > 0
