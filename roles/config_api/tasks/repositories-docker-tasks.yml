- name: Normalize Docker proxy repositories
  ansible.builtin.set_fact:
    nexus_repos_docker_proxy_normalized: >
      {{ nexus_repos_docker_proxy | cloudkrafter.nexus.normalize_repositories(
          nexus_repos_global_defaults,
          nexus_repos_type_defaults,
          nexus_repos_format_defaults,
          'proxy',
          'docker',
          legacy_field_map
        ) }}
  tags:
    - docker
    - docker-proxy

- name: Normalize Docker hosted repositories
  ansible.builtin.set_fact:
    nexus_repos_docker_hosted_normalized: >
      {{ nexus_repos_docker_hosted | cloudkrafter.nexus.normalize_repositories(
          nexus_repos_global_defaults,
          nexus_repos_type_defaults,
          nexus_repos_format_defaults,
          'hosted',
          'docker',
          legacy_field_map
        ) }}
  tags:
    - docker
    - docker-hosted

- name: Normalize Docker group repositories
  ansible.builtin.set_fact:
    nexus_repos_docker_group_normalized: >
      {{ nexus_repos_docker_group | cloudkrafter.nexus.normalize_repositories(
          nexus_repos_global_defaults,
          nexus_repos_type_defaults,
          nexus_repos_format_defaults,
          'group',
          'docker',
          legacy_field_map
        ) }}
  tags:
    - docker
    - docker-group

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing Docker repositories
  ansible.builtin.set_fact:
    __nxs_crnt_docker_hstd__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'docker') | selectattr('type', 'equalto', 'hosted') | list }}"
    __nxs_crnt_docker_prxy__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'docker') | selectattr('type', 'equalto', 'proxy') | list }}"
    __nxs_crnt_docker_grp__: "{{ __nxs_all_repos__.json | selectattr('format', 'equalto', 'docker') | selectattr('type', 'equalto', 'group') | list }}"
  tags: repositories

- name: Determine Docker repositories to create
  ansible.builtin.set_fact:
    nxs_create_docker_hosted_repos: "{{ nexus_repos_docker_hosted_normalized | rejectattr('name', 'in', __nxs_crnt_docker_hstd__ | map(attribute='name') | list) | list }}"
    nxs_create_docker_proxy_repos: "{{ nexus_repos_docker_proxy_normalized | rejectattr('name', 'in', __nxs_crnt_docker_prxy__ | map(attribute='name') | list) | list }}"
    nxs_create_docker_group_repos: "{{ nexus_repos_docker_group_normalized | rejectattr('name', 'in', __nxs_crnt_docker_grp__ | map(attribute='name') | list) | list }}"
  tags: repositories

- name: Determine Docker repositories to delete
  ansible.builtin.set_fact:
    nxs_delete_docker_hosted_repos: "{{ __nxs_crnt_docker_hstd__ | rejectattr('name', 'in', nexus_repos_docker_hosted_normalized | map(attribute='name') | list) | list }}"
    nxs_delete_docker_proxy_repos: "{{ __nxs_crnt_docker_prxy__ | rejectattr('name', 'in', nexus_repos_docker_proxy_normalized | map(attribute='name') | list) | list }}"
    nxs_delete_docker_group_repos: "{{ __nxs_crnt_docker_grp__ | rejectattr('name', 'in', nexus_repos_docker_group_normalized | map(attribute='name') | list) | list }}"
  tags: repositories

- name: Compare Docker hosted repositories for changes
  ansible.builtin.set_fact:
    nxs_update_docker_hosted_repos: "{{ nxs_update_docker_hosted_repos + [item] }}"
  loop: "{{ nexus_repos_docker_hosted_normalized | list }}"
  when: >
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).format | default('docker') != item.format | default('docker') or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).type | default('hosted') != item.type | default('hosted') or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.writePolicy | default(omit) != item.storage.writePolicy | default(None) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).storage.latestPolicy | default(false) != item.storage.latestPolicy | default(false) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).component.proprietaryComponents | default(false) != item.component.proprietaryComponents | default(false) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).docker.v1Enabled | default(false) != item.docker.v1Enabled | default(false) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).docker.forceBasicAuth | default(false) != item.docker.forceBasicAuth | default(false) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).docker.httpPort | default(omit) != item.docker.httpPort | default(None) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).docker.httpsPort | default(omit) != item.docker.httpsPort | default(None) or
    (__nxs_crnt_docker_hstd__ | selectattr('name', 'equalto', item.name) | first).docker.subdomain | default(omit) != item.docker.subdomain | default(None)
  tags:
    - docker
    - docker-hosted

- name: Compare Docker proxy repositories for changes
  ansible.builtin.set_fact:
    nxs_update_docker_proxy_repos: "{{ nxs_update_docker_proxy_repos + [item] }}"
  loop: "{{ nexus_repos_docker_proxy_normalized | list }}"
  # TODO: implement replication and authentication
  when: >
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).format | default('docker') != item.format | default('docker') or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).type | default('proxy') != item.type | default('proxy') or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default([]) | sort != item.cleanup.policyNames | default([]) | sort or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl | default(omit) != item.proxy.remoteUrl | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge | default(omit) != item.proxy.contentMaxAge | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge | default(omit) != item.proxy.metadataMaxAge | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled | default(false) != item.negativeCache.enabled | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive | default(omit) != item.negativeCache.timeToLive | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.blocked | default(false) != item.httpClient.blocked | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock | default(false) != item.httpClient.autoBlock | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries | default(omit) != item.httpClient.connection.retries | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix | default(omit) != item.httpClient.connection.userAgentSuffix | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout | default(omit) != item.httpClient.connection.timeout | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects | default(false) != item.httpClient.connection.enableCircularRedirects | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies | default(false) != item.httpClient.connection.enableCookies | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore | default(false) != item.httpClient.connection.useTrustStore | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).docker.v1Enabled | default(false) != item.docker.v1Enabled | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).docker.forceBasicAuth | default(false) != item.docker.forceBasicAuth | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).docker.httpPort | default(omit) != item.docker.httpPort | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).docker.httpsPort | default(omit) != item.docker.httpsPort | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).docker.subdomain | default(omit) != item.docker.subdomain | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).dockerProxy.indexType | default(omit) != item.dockerProxy.indexType | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).dockerProxy.indexUrl | default(omit) != item.dockerProxy.indexUrl | default(None) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).dockerProxy.cacheForeignLayers | default(false) != item.dockerProxy.cacheForeignLayers | default(false) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).dockerProxy.foreignLayerUrlWhitelist | default([]) != item.dockerProxy.foreignLayerUrlWhitelist | default([]) or
    (__nxs_crnt_docker_prxy__ | selectattr('name', 'equalto', item.name) | first).routingRuleName | default(omit) != item.routingRule | default(None)
  tags:
    - docker
    - docker-proxy

- name: Compare Docker group repositories for changes
  ansible.builtin.set_fact:
    nxs_update_docker_group_repos: "{{ nxs_update_docker_group_repos + [item] }}"
  loop: "{{ nexus_repos_docker_group_normalized | list }}"
  when: >
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first) is not defined or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).format | default('docker') != item.format | default('docker') or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).type | default('group') != item.type | default('group') or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).online | default(true) != item.online | default(true) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName | default(omit) != item.storage.blobStoreName | default(None) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation | default(false) != item.storage.strictContentTypeValidation | default(false) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).group.memberNames | default([]) != item.group.memberNames | default([]) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).group.writableMember | default(omit) != item.group.writableMember | default(None) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).docker.v1Enabled | default(false) != item.docker.v1Enabled | default(false) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).docker.forceBasicAuth | default(false) != item.docker.forceBasicAuth | default(false) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).docker.httpPort | default(omit) != item.docker.httpPort | default(None) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).docker.httpsPort | default(omit) != item.docker.httpsPort | default(None) or
    (__nxs_crnt_docker_grp__ | selectattr('name', 'equalto', item.name) | first).docker.subdomain | default(omit) != item.docker.subdomain | default(None)
  tags: docker

- name: Show nxs_create_docker_hosted_repos
  ansible.builtin.debug:
    var: nxs_create_docker_hosted_repos | length
  tags:
    - docker
    - docker-hosted

- name: Show nxs_update_docker_hosted_repos
  ansible.builtin.debug:
    var: nxs_update_docker_hosted_repos | length
  tags:
    - docker
    - docker-hosted

- name: Show nxs_delete_docker_hosted_repos
  ansible.builtin.debug:
    var: nxs_delete_docker_hosted_repos | length
  tags:
    - docker
    - docker-hosted

- name: Show nxs_create_docker_proxy_repos
  ansible.builtin.debug:
    var: nxs_create_docker_proxy_repos | length
  tags:
    - docker
    - docker-proxy

- name: Show nxs_update_docker_proxy_repos
  ansible.builtin.debug:
    var: nxs_update_docker_proxy_repos | length
  tags:
    - docker
    - docker-proxy

- name: Show nxs_delete_docker_proxy_repos
  ansible.builtin.debug:
    var: nxs_delete_docker_proxy_repos | length
  tags:
    - docker
    - docker-proxy

- name: Show nxs_create_docker_group_repos
  ansible.builtin.debug:
    var: nxs_create_docker_group_repos | length
  tags: docker

- name: Show nxs_update_docker_group_repos
  ansible.builtin.debug:
    var: nxs_update_docker_group_repos | length
  tags: docker

- name: Show nxs_delete_docker_group_repos
  ansible.builtin.debug:
    var: nxs_delete_docker_group_repos | length
  tags: docker

- name: Create configured Docker Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: hosted
    method: POST
  with_items:
    - "{{ nxs_create_docker_hosted_repos | default([]) }}"
  when: nxs_create_docker_hosted_repos | length > 0
  tags:
    - docker
    - docker-hosted

- name: Create configured Docker Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: proxy
    method: POST
  with_items:
    - "{{ nxs_create_docker_proxy_repos | default([]) }}"
  when: nxs_create_docker_proxy_repos | length > 0
  tags:
    - docker
    - docker-proxy

- name: Create configured Docker Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: group
    method: POST
  with_items:
    - "{{ nxs_create_docker_group_repos | default([]) }}"
  when: nxs_create_docker_group_repos | length > 0
  tags: docker

- name: Update configured Docker Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: hosted
    method: PUT
  with_items:
    - "{{ nxs_update_docker_hosted_repos | default([]) }}"
  when: nxs_update_docker_hosted_repos | length > 0
  tags:
    - docker
    - docker-hosted

- name: Update configured Docker Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: proxy
    method: PUT
  with_items:
    - "{{ nxs_update_docker_proxy_repos | default([]) }}"
  when: nxs_update_docker_proxy_repos | length > 0
  tags:
    - docker
    - docker-proxy

- name: Update configured Docker Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: docker
    type: group
    method: PUT
  with_items:
    - "{{ nxs_update_docker_group_repos | default([]) }}"
  when: nxs_update_docker_group_repos | length > 0
  tags: docker

- name: Delete Docker Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_docker_hosted_repos | default([]) }}"
    format: docker
    type: hosted
    method: DELETE
  with_items:
    - "{{ nxs_delete_docker_hosted_repos | default([]) }}"
  when: nxs_delete_docker_hosted_repos | length > 0
  tags:
    - docker
    - docker-hosted

- name: Delete Docker Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_docker_proxy_repos | default([]) }}"
    format: docker
    type: proxy
    method: DELETE
  with_items:
    - "{{ nxs_delete_docker_proxy_repos | default([]) }}"
  when: nxs_delete_docker_proxy_repos | length > 0
  tags:
    - docker
    - docker-proxy

- name: Delete Docker Group repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ nxs_delete_docker_group_repos | default([]) }}"
    format: docker
    type: group
    method: DELETE
  with_items:
    - "{{ nxs_delete_docker_group_repos | default([]) }}"
  when: nxs_delete_docker_group_repos | length > 0
  tags: docker
