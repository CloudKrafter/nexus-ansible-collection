- name: Get all Privileges
  ansible.builtin.uri:
    url: "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}/service/rest/v1/security/privileges"
    method: GET
    validate_certs: "{{ nexus_api_validate_certs }}"
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
    timeout: "{{ nexus_api_timeout }}"
  check_mode: false # force task to run in check mode
  register: __nexus_privileges__
  tags: privileges

- name: Filter out privileges with readOnly true
  ansible.builtin.set_fact:
    current_nexus_privileges: >-
      {{
        __nexus_privileges__.json
        | rejectattr('readOnly', 'equalto', true)
        | list
      }}
  tags: privileges

- name: Normalize application privileges
  ansible.builtin.set_fact:
    nexus_application_privileges_normalized: "{{ nexus_application_privileges_normalized + [normalized_application_privilege] }}"
  vars:
    normalized_application_privilege: >-
      {{
        {
          'name': nx_app_privilege.name,
          'type': nx_app_privilege.type | default(_nexus_privilege_defaults.type),
          'description': nx_app_privilege.description | default(''),
          'domain': nx_app_privilege.domain | default('default'),
          'actions': nx_app_privilege.actions | default(_nexus_privilege_defaults.actions)
        }
      }}
  loop: "{{ nexus_privileges | selectattr('type', 'equalto', 'application') | list }}"
  loop_control:
    loop_var: nx_app_privilege
  tags: privileges

- name: Normalize script privileges
  ansible.builtin.set_fact:
    nexus_script_privileges_normalized: "{{ nexus_script_privileges_normalized + [normalized_script_privilege] }}"
  vars:
    normalized_script_privilege: >-
      {{
        {
          'name': nx_script_privilege.name,
          'description': nx_script_privilege.description | default(''),
          'scriptName': nx_script_privilege.scriptName | default(nx_script_privilege.script_name),
          'actions': nx_script_privilege.actions | default(_nexus_privilege_defaults.actions)
        }
      }}
  loop: "{{ nexus_privileges | selectattr('type', 'equalto', 'script') | list }}"
  loop_control:
    loop_var: nx_script_privilege
  tags: privileges

- name: Normalize wildcard privileges
  ansible.builtin.set_fact:
    nexus_wildcard_privileges_normalized: "{{ nexus_wildcard_privileges_normalized + [normalized_wildcard_privilege] }}"
  vars:
    normalized_wildcard_privilege: >-
      {{
        {
          'name': nx_wildcard_privilege.name,
          'description': nx_wildcard_privilege.description | default(''),
          'pattern': nx_wildcard_privilege.pattern | default('')
        }
      }}
  loop: "{{ nexus_privileges | selectattr('type', 'equalto', 'wildcard') | list }}"
  loop_control:
    loop_var: nx_wildcard_privilege
  tags: privileges

- name: Normalize repository-content-selector privileges
  ansible.builtin.set_fact:
    nexus_repository_content_selector_privileges_normalized: "{{ nexus_repository_content_selector_privileges_normalized + [normalized_repository_content_selector_privilege] }}"
  vars:
    normalized_repository_content_selector_privilege: >-
      {{
        {
          'name': nx_repository_content_selector_privilege.name,
          'description': nx_repository_content_selector_privilege.description | default(''),
          'repository': nx_repository_content_selector_privilege.repository | default(''),
          'contentSelector': nx_repository_content_selector_privilege.contentSelector | default(''),
          'format': nx_repository_content_selector_privilege.format | default(_nexus_privilege_defaults.format),
          'actions': nx_repository_content_selector_privilege.actions | default(_nexus_privilege_defaults.actions)
        }
      }}
  loop: "{{ nexus_privileges | selectattr('type', 'equalto', 'repository-content-selector') | list }}"
  loop_control:
    loop_var: nx_repository_content_selector_privilege
  tags: privileges

- name: Normalize repository-admin privileges
  ansible.builtin.set_fact:
    nexus_repository_admin_privileges_normalized: "{{ nexus_repository_admin_privileges_normalized + [normalized_repository_admin_privilege] }}"
  vars:
    normalized_repository_admin_privilege: >-
      {{
        {
          'name': nx_repository_admin_privilege.name,
          'description': nx_repository_admin_privilege.description | default(''),
          'repository': nx_repository_admin_privilege.repository | default(''),
          'format': nx_repository_admin_privilege.format | default(_nexus_privilege_defaults.format),
          'actions': nx_repository_admin_privilege.actions | default(_nexus_privilege_defaults.actions)
        }
      }}
  loop: "{{ nexus_privileges | selectattr('type', 'equalto', 'repository-admin') | list }}"
  loop_control:
    loop_var: nx_repository_admin_privilege
  tags: privileges

- name: Normalize repository-view privileges
  ansible.builtin.set_fact:
    nexus_repository_view_privileges_normalized: "{{ nexus_repository_view_privileges_normalized + [normalized_repository_view_privilege] }}"
  vars:
    normalized_repository_view_privilege: >-
      {{
        {
          'name': nx_repository_view_privilege.name,
          'description': nx_repository_view_privilege.description | default(''),
          'repository': nx_repository_view_privilege.repository | default(''),
          'format': nx_repository_view_privilege.format | default(_nexus_privilege_defaults.format),
          'actions': nx_repository_view_privilege.actions | default(_nexus_privilege_defaults.actions)
        }
      }}
  loop: "{{ nexus_privileges | selectattr('type', 'equalto', 'repository-view') | list }}"
  loop_control:
    loop_var: nx_repository_view_privilege
  tags: privileges

- name: Determine privileges to create
  ansible.builtin.set_fact:
    nxs_create_app_privileges: "{{ nexus_application_privileges_normalized | rejectattr('name', 'in', current_nexus_privileges | map(attribute='name') | list) | list }}"
    nxs_create_script_privileges: "{{ nexus_script_privileges_normalized | rejectattr('name', 'in', current_nexus_privileges | map(attribute='name') | list) | list }}"
    nxs_create_wildcard_privileges: "{{ nexus_wildcard_privileges_normalized | rejectattr('name', 'in', current_nexus_privileges | map(attribute='name') | list) | list }}"
    nxs_create_repository_content_selector_privileges: "{{ nexus_repository_content_selector_privileges_normalized | rejectattr('name', 'in', current_nexus_privileges | map(attribute='name') | list) | list }}"
    nxs_create_repository_admin_privileges: "{{ nexus_repository_admin_privileges_normalized | rejectattr('name', 'in', current_nexus_privileges | map(attribute='name') | list) | list }}"
    nxs_create_repository_view_privileges: "{{ nexus_repository_view_privileges_normalized | rejectattr('name', 'in', current_nexus_privileges | map(attribute='name') | list) | list }}"
  tags: privileges

- name: Determine privileges to delete
  ansible.builtin.set_fact:
    nxs_delete_app_privileges: "{{ current_nexus_privileges | selectattr('type', 'equalto', 'application') | rejectattr('name', 'in', nexus_application_privileges_normalized | map(attribute='name') | list) | list }}"
    nxs_delete_script_privileges: "{{ current_nexus_privileges | selectattr('type', 'equalto', 'script') | rejectattr('name', 'in', nexus_script_privileges_normalized | map(attribute='name') | list) | list }}"
    nxs_delete_wildcard_privileges: "{{ current_nexus_privileges | selectattr('type', 'equalto', 'wildcard') | rejectattr('name', 'in', nexus_wildcard_privileges_normalized | map(attribute='name') | list) | list }}"
    nxs_delete_repository_content_selector_privileges: "{{ current_nexus_privileges | selectattr('type', 'equalto', 'repository-content-selector') | rejectattr('name', 'in', nexus_repository_content_selector_privileges_normalized | map(attribute='name') | list) | list }}"
    nxs_delete_repository_admin_privileges: "{{ current_nexus_privileges | selectattr('type', 'equalto', 'repository-admin') | rejectattr('name', 'in', nexus_repository_admin_privileges_normalized | map(attribute='name') | list) | list }}"
    nxs_delete_repository_view_privileges: "{{ current_nexus_privileges | selectattr('type', 'equalto', 'repository-view') | rejectattr('name', 'in', nexus_repository_view_privileges_normalized | map(attribute='name') | list) | list }}"
  tags: privileges

## TODO: Implement update privileges

- name: Show nxs_create_app_privileges
  ansible.builtin.debug:
    var: nxs_create_app_privileges
  when: nexus_config_dry_run
  changed_when: nxs_create_app_privileges | length > 0
  tags: privileges

- name: Show nxs_create_script_privileges
  ansible.builtin.debug:
    var: nxs_create_script_privileges
  when: nexus_config_dry_run
  changed_when: nxs_create_script_privileges | length > 0
  tags: privileges

- name: Show nxs_create_wildcard_privileges
  ansible.builtin.debug:
    var: nxs_create_wildcard_privileges
  when: nexus_config_dry_run
  changed_when: nxs_create_wildcard_privileges | length > 0
  tags: privileges

- name: Show nxs_create_repository_content_selector_privileges
  ansible.builtin.debug:
    var: nxs_create_repository_content_selector_privileges
  when: nexus_config_dry_run
  changed_when: nxs_create_repository_content_selector_privileges | length > 0
  tags: privileges

- name: Show nxs_create_repository_admin_privileges
  ansible.builtin.debug:
    var: nxs_create_repository_admin_privileges
  when: nexus_config_dry_run
  changed_when: nxs_create_repository_admin_privileges | length > 0
  tags: privileges

- name: Show nxs_create_repository_view_privileges
  ansible.builtin.debug:
    var: nxs_create_repository_view_privileges
  when: nexus_config_dry_run
  changed_when: nxs_create_repository_view_privileges | length > 0
  tags: privileges

## TODO: Implement update privileges

- name: Show nxs_delete_app_privileges
  ansible.builtin.debug:
    var: nxs_delete_app_privileges
  when: nexus_config_dry_run
  changed_when: nxs_delete_app_privileges | length > 0
  tags: privileges

- name: Show nxs_delete_script_privileges
  ansible.builtin.debug:
    var: nxs_delete_script_privileges
  when: nexus_config_dry_run
  changed_when: nxs_delete_script_privileges | length > 0
  tags: privileges

- name: Show nxs_delete_wildcard_privileges
  ansible.builtin.debug:
    var: nxs_delete_wildcard_privileges
  when: nexus_config_dry_run
  changed_when: nxs_delete_wildcard_privileges | length > 0
  tags: privileges

- name: Show nxs_delete_repository_content_selector_privileges
  ansible.builtin.debug:
    var: nxs_delete_repository_content_selector_privileges
  when: nexus_config_dry_run
  changed_when: nxs_delete_repository_content_selector_privileges | length > 0
  tags: privileges

- name: Show nxs_delete_repository_admin_privileges
  ansible.builtin.debug:
    var: nxs_delete_repository_admin_privileges
  when: nexus_config_dry_run
  changed_when: nxs_delete_repository_admin_privileges | length > 0
  tags: privileges

- name: Show nxs_delete_repository_view_privileges
  ansible.builtin.debug:
    var: nxs_delete_repository_view_privileges
  when: nexus_config_dry_run
  changed_when: nxs_delete_repository_view_privileges | length > 0
  tags: privileges

- name: Apply privilege changes
  block:
    - name: Create configured Application Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: application
        method: POST
      with_items:
        - "{{ nxs_create_app_privileges | default([]) }}"
      when: nxs_create_app_privileges | length > 0
      tags: privileges
    - name: Create configured Script Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: script
        method: POST
      with_items:
        - "{{ nxs_create_script_privileges | default([]) }}"
      when: nxs_create_script_privileges | length > 0
      tags: privileges
    - name: Create configured Wildcard Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: wildcard
        method: POST
      with_items:
        - "{{ nxs_create_wildcard_privileges | default([]) }}"
      when: nxs_create_wildcard_privileges | length > 0
      tags: privileges
    - name: Create configured Repository Content Selector Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: repository-content-selector
        method: POST
      with_items:
        - "{{ nxs_create_repository_content_selector_privileges | default([]) }}"
      when: nxs_create_repository_content_selector_privileges | length > 0
      tags: privileges
    - name: Create configured Repository Admin Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: repository-admin
        method: POST
      with_items:
        - "{{ nxs_create_repository_admin_privileges | default([]) }}"
      when: nxs_create_repository_admin_privileges | length > 0
      tags: privileges
    - name: Create configured Repository View Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: repository-view
        method: POST
      with_items:
        - "{{ nxs_create_repository_view_privileges | default([]) }}"
      when: nxs_create_repository_view_privileges | length > 0
      tags: privileges

    ## TODO: Implement update privileges

    - name: Delete Application Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: application
        method: DELETE
      with_items:
        - "{{ nxs_delete_app_privileges | default([]) }}"
      when: nxs_delete_app_privileges | length > 0 and nexus_enforce_desired_state | bool
      tags: privileges
    - name: Delete Script Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: script
        method: DELETE
      with_items:
        - "{{ nxs_delete_script_privileges | default([]) }}"
      when: nxs_delete_script_privileges | length > 0 and nexus_enforce_desired_state | bool
      tags: privileges
    - name: Delete Wildcard Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: wildcard
        method: DELETE
      with_items:
        - "{{ nxs_delete_wildcard_privileges | default([]) }}"
      when: nxs_delete_wildcard_privileges | length > 0 and nexus_enforce_desired_state | bool
      tags: privileges

    - name: Delete Repository Content Selector Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: repository-content-selector
        method: DELETE
      with_items:
        - "{{ nxs_delete_repository_content_selector_privileges | default([]) }}"
      when: nxs_delete_repository_content_selector_privileges | length > 0 and nexus_enforce_desired_state | bool
      tags: privileges
    - name: Delete Repository Admin Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: repository-admin
        method: DELETE
      with_items:
        - "{{ nxs_delete_repository_admin_privileges | default([]) }}"
      when: nxs_delete_repository_admin_privileges | length > 0 and nexus_enforce_desired_state | bool
      tags: privileges
    - name: Delete Repository View Privileges using Nexus API
      ansible.builtin.include_tasks: privileges-api.yml
      vars:
        nexus_privileges: "{{ item | default([]) }}"
        type: repository-view
        method: DELETE
      with_items:
        - "{{ nxs_delete_repository_view_privileges | default([]) }}"
      when: nxs_delete_repository_view_privileges | length > 0 and nexus_enforce_desired_state | bool
      tags: privileges
  when: not nexus_config_dry_run
  tags: privileges
