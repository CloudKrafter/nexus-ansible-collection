# Only roles within the 'default' source can be managed by the API
- name: Get all Roles
  ansible.builtin.uri:
    url: "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}/service/rest/v1/security/roles"
    method: GET
    validate_certs: "{{ nexus_api_validate_certs }}"
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
    timeout: "{{ nexus_api_timeout }}"
  check_mode: false # force task to run in check mode
  register: __nexus_roles__
  tags: roles

- name: Filter out roles with readOnly true or source not equal to default
  ansible.builtin.set_fact:
    filtered_nexus_roles: >-
      {{
        __nexus_roles__.json
        | rejectattr('readOnly', 'equalto', true)
        | rejectattr('source', 'ne', 'default')
        | list
      }}
  tags: roles

- name: Normalize roles
  ansible.builtin.set_fact:
    nexus_roles_normalized: "{{ nexus_roles_normalized + [normalized_role] }}"
  vars:
    normalized_role: >-
      {{
        {
          'name': nx_role.name,
          'id': nx_role.id | default(nx_role.name),
          'description': nx_role.description | default(''),
          'privileges': nx_role.privileges | default([]),
          'roles': nx_role.roles | default([])
        }
      }}
  loop: "{{ nexus_roles }}"
  loop_control:
    loop_var: nx_role
  tags: roles

- name: Determine roles to create
  ansible.builtin.set_fact:
    nxs_create_roles: "{{ nexus_roles_normalized | rejectattr('name', 'in', filtered_nexus_roles | map(attribute='name') | list) | list }}"
  tags: roles

- name: Determine roles to delete
  ansible.builtin.set_fact:
    nxs_delete_roles: "{{ filtered_nexus_roles | rejectattr('name', 'in', nexus_roles_normalized | map(attribute='name') | list) | list }}"
  tags: roles

- name: Compare roles for changes
  ansible.builtin.set_fact:
    nxs_update_roles: "{{ nxs_update_roles + [item] }}"
  loop: "{{ nexus_roles_normalized | rejectattr('name', 'in', nxs_create_roles | map(attribute='name') | list) | list }}"
  when: >
    ( filtered_nexus_roles | selectattr('id', 'equalto', item.id) | first) is not defined or
    ( filtered_nexus_roles | selectattr('id', 'equalto', item.id) | first).name | default(omit) != item.name | default(omit) or
    ( filtered_nexus_roles | selectattr('id', 'equalto', item.id) | first).description | default(omit) != item.description | default(omit) or
    ( filtered_nexus_roles | selectattr('id', 'equalto', item.id) | first).privileges | default([]) | sort != item.privileges | default([]) | sort or
    ( filtered_nexus_roles | selectattr('id', 'equalto', item.id) | first).roles | default([]) | sort != item.roles | default([]) | sort
  tags: roles

- name: Show nxs_create_roles
  ansible.builtin.debug:
    var: nxs_create_roles
  when: nexus_config_dry_run
  changed_when: nxs_create_roles | length > 0
  tags: roles

- name: Show nxs_update_roles
  ansible.builtin.debug:
    var: nxs_update_roles
  when: nexus_config_dry_run
  changed_when: nxs_update_roles | length > 0
  tags: roles

- name: Show nxs_delete_roles
  ansible.builtin.debug:
    var: nxs_delete_roles
  when: nexus_config_dry_run
  changed_when: nxs_delete_roles | length > 0
  tags: roles

- name: Apply role changes
  block:
    - name: Create configured Roles using Nexus API
      ansible.builtin.include_tasks: roles-api.yml
      vars:
        nexus_roles: "{{ item | default([]) }}"
        method: POST
      with_items:
        - "{{ nxs_create_roles | default([]) }}"
      when: nxs_create_roles | length > 0
      tags: roles

    - name: Update configured Roles using Nexus API
      ansible.builtin.include_tasks: roles-api.yml
      vars:
        nexus_roles: "{{ item | default([]) }}"
        method: PUT
      with_items:
        - "{{ nxs_update_roles | default([]) }}"
      when: nxs_update_roles | length > 0
      tags: roles

    - name: Delete Roles using Nexus API
      ansible.builtin.include_tasks: roles-api.yml
      vars:
        nexus_roles: "{{ item | default([]) }}"
        method: DELETE
      with_items:
        - "{{ nxs_delete_roles | default([]) }}"
      when: nxs_delete_roles | length > 0 and nexus_enforce_desired_state | bool
      tags: roles
  when: not nexus_config_dry_run
  tags: roles
