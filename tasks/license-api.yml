# Get current license information when nexus_enable_pro is true
- name: Get license information
  ansible.builtin.uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/system/license"
    method: GET
    validate_certs: false
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
    status_code: [200, 402]
  register: __nexus_license_info__

- name: Get NEXUS_LICENSE_B64 from the environment variable
  ansible.builtin.set_fact:
    nexus_license_b64: "{{ lookup('env', 'NEXUS_LICENSE_B64') }}"
  when: nexus_license_b64 is not defined

- name: Check if "{{ nexus_license_path }}" exists
  ansible.builtin.stat:
    path: "{{ nexus_license_path }}"
  register: __license_file_path__

- name: Create license file
  ansible.builtin.copy:
    content: "{{ nexus_license_b64 | b64decode }}"
    dest: "{{ nexus_license_path }}"
  when: __license_file_path__.stat.exists == False and nexus_enable_pro == true

- name: Upload license file through API
  ansible.builtin.uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/system/license"
    method: POST
    validate_certs: false
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
    headers:
      Accept: "application/json"
      Content-Type: "application/octet-stream"
    src: "{{ nexus_license_path }}"
    status_code: 200
  register: __uploaded_license__
  when: __license_file_path__.stat.exists == True and nexus_enable_pro == true

- name: Remove license
  ansible.builtin.uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/system/license"
    method: DELETE
    validate_certs: false
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
    status_code: 204
  when: nexus_enable_pro == false
