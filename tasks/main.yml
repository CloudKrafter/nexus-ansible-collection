---
# include tasks from license-api.yml
- include_tasks: license-api.yml

- name: Get all Cleanup policies
  uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/cleanup-policies"
    method: GET
    validate_certs: false
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
  register: __nexus_cleanup_policies__
  when: nexus_enable_pro | bool

- name: Determine cleanup policies to create
  set_fact:
    nexus_repos_cleanup_policies_to_create: "{{ nexus_repos_cleanup_policies | rejectattr('name', 'in', __nexus_cleanup_policies__.json | map(attribute='name') | list) | list }}"
  when: nexus_enable_pro | bool

- name: Determine cleanup policies to delete
  set_fact:
    nexus_repos_cleanup_policies_to_delete: "{{ __nexus_cleanup_policies__.json | rejectattr('name', 'in', nexus_repos_cleanup_policies | map(attribute='name') | list) | list }}"
  when: nexus_enable_pro | bool

- name: Create configured Cleanup Policies using Nexus API
  ansible.builtin.include_tasks: cleanup-policies.yml
  vars:
    policies: "{{ item | default([]) }}"
    method: POST
  with_items:
    - "{{ nexus_repos_cleanup_policies_to_create | default([]) }}"
  when: nexus_repos_cleanup_policies_to_create | length > 0

- name: Delete Cleanup Policies using Nexus API
  ansible.builtin.include_tasks: cleanup-policies.yml
  vars:
    policies: "{{ item | default([]) }}"
    method: DELETE
  with_items:
    - "{{ nexus_repos_cleanup_policies_to_delete | default([]) }}"
  when: nexus_repos_cleanup_policies_to_delete | length > 0

# Show all cleanup policies
- name: Show all cleanup policies
  debug:
    var: __nexus_cleanup_policies__

- name: Get all repositories
  uri:
    url: "{{ nexus_protocol }}://{{ nexus_hostname }}:{{ nexus_port }}/service/rest/v1/repositorySettings"
    method: GET
    validate_certs: false
    status_code: 200
    user: "{{ nexus_admin_username }}"
    password: "{{ nexus_admin_password }}"
    force_basic_auth: true
  register: __nexus_repositories__
  until: __nexus_repositories__.status == 200
  retries: 30
  delay: 10

- name: Process definitions for maven
  when: nexus_config_maven | bool
  block:
    - name: Apply defaults to maven proxy repos
      ansible.builtin.set_fact:
        final_nexus_repos_maven_proxy: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_maven_proxy -%}
            {%- set combined_repo = __nexus_repos_maven_proxy_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Show final_nexus_repos_maven_proxy
      debug:
        var: final_nexus_repos_maven_proxy

    - name: Apply defaults to maven hosted repos
      ansible.builtin.set_fact:
        final_nexus_repos_maven_hosted: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_maven_hosted -%}
            {%- set combined_repo = __nexus_repos_maven_hosted_defaults | combine(repo, recursive=True) -%}
              {{ result.append(combined_repo) }}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Show final_nexus_repos_maven_hosted
      debug:
        var: final_nexus_repos_maven_hosted

    # - name: Apply defaults to maven group repos
    #   ansible.builtin.set_fact:
    #     nexus_repos_maven_group: >-
    #       {%- set result = [] -%}
    #       {%- for repo in nexus_repos_maven_group -%}
    #         {%- set combined_repo = _nexus_repos_maven_defaults | combine(repo) -%}
    #         {%- set transformed_repo = {
    #           'name': combined_repo.name,
    #           'online': combined_repo.online | default(true),
    #           'storage': {
    #             'blobStoreName': combined_repo.blob_store | default('default'),
    #             'strictContentTypeValidation': combined_repo.strict_content_validation | default(true)
    #           },
    #           'group': {
    #             'memberNames': combined_repo.member_repos | default([])
    #           }
    #         } -%}
    #         {%- if use_api -%}
    #           {{ result.append(transformed_repo) }}
    #         {%- else -%}
    #           {{ result.append(combined_repo) }}
    #         {%- endif -%}
    #       {%- endfor -%}
    #       {{ result | to_json | from_json }}

    # - name: Add maven repositories to global repos list
    #   ansible.builtin.set_fact:
    #     _nexus_repos_global_list: >-
    #       {{
    #         _nexus_repos_global_list | default([])
    #         +
    #         (nexus_repos_maven_proxy | map('combine', {"format": "maven2", "type": "proxy"}) | list)
    #         +
    #         (nexus_repos_maven_hosted | map('combine', {"format": "maven2", "type": "hosted"}) | list)
    #         +
    #         (nexus_repos_maven_group | map('combine', {"format": "maven2", "type": "group"}) | list)
    #       }}
    #     _nexus_repos_maven_proxy: >-
    #       {{
    #         _nexus_repos_maven_proxy | default([])
    #         +
    #         (nexus_repos_maven_proxy | map('combine', {"format": "maven", "type": "proxy"}) | list)
    #       }}
    #     _nexus_repos_maven_hosted: >-
    #       {{
    #         _nexus_repos_maven_hosted | default([])
    #         +
    #         (nexus_repos_maven_hosted | map('combine', {"format": "maven", "type": "hosted"}) | list)
    #       }}
    #     _nexus_repos_maven_group: >-
    #       {{
    #         _nexus_repos_maven_group | default([])
    #         +
    #         (nexus_repos_maven_group | map('combine', {"format": "maven", "type": "group"}) | list)
    #       }}

# Need filtered facts for existing repositories because the API has different endpoints for each type and format
- name: Filter existing repositories
  set_fact:
    existing_maven_hosted_repos: "{{ __nexus_repositories__.json | selectattr('format', 'equalto', 'maven2') | selectattr('type', 'equalto', 'hosted') | list }}"
    existing_maven_proxy_repos: "{{ __nexus_repositories__.json | selectattr('format', 'equalto', 'maven2') | selectattr('type', 'equalto', 'proxy') | list }}"
    existing_maven_group_repos: "{{ __nexus_repositories__.json | selectattr('format', 'equalto', 'maven2') | selectattr('type', 'equalto', 'group') | list }}"

- name: Determine repositories to create
  set_fact:
    maven_hosted_repos_to_create: "{{ final_nexus_repos_maven_hosted | rejectattr('name', 'in', existing_maven_hosted_repos | map(attribute='name') | list) | list }}"
    maven_proxy_repos_to_create: "{{ final_nexus_repos_maven_proxy | rejectattr('name', 'in', existing_maven_proxy_repos | map(attribute='name') | list) | list }}"
    maven_group_repos_to_create: "{{ nexus_repos_maven_group | rejectattr('name', 'in', existing_maven_group_repos | map(attribute='name') | list) | list }}"

- name: Determine repositories to delete
  set_fact:
    maven_hosted_repos_to_delete: "{{ existing_maven_hosted_repos | rejectattr('name', 'in', final_nexus_repos_maven_hosted | map(attribute='name') | list) | list }}"
    maven_proxy_repos_to_delete: "{{ existing_maven_proxy_repos | rejectattr('name', 'in', final_nexus_repos_maven_proxy | map(attribute='name') | list) | list }}"
    maven_group_repos_to_delete: "{{ existing_maven_group_repos | rejectattr('name', 'in', nexus_repos_maven_group | map(attribute='name') | list) | list }}"

- name: Initialize empty array for assets to be updated
  set_fact:
    maven_hosted_repos_to_update: []
    maven_proxy_repos_to_update: []
    maven_group_repos_to_update: []
    nexus_repos_cleanup_policies_to_update: []

- name: Compare cleanup policies for changes
  set_fact:
    nexus_repos_cleanup_policies_to_update: "{{ nexus_repos_cleanup_policies_to_update + [ item ] }}"
  loop: "{{ nexus_repos_cleanup_policies | list }}"
  when: >
    ( __nexus_cleanup_policies__.json | selectattr('name', 'equalto', item.name) | first) is not defined or
    ( __nexus_cleanup_policies__.json | selectattr('name', 'equalto', item.name) | first).criteriaLastBlobUpdated | default(omit) != item.criteriaLastBlobUpdated | default(None) or
    ( __nexus_cleanup_policies__.json | selectattr('name', 'equalto', item.name) | first).criteriaLastDownloaded | default(omit) != item.criteriaLastDownloaded | default(None) or
    ( __nexus_cleanup_policies__.json | selectattr('name', 'equalto', item.name) | first).criteriaAssetRegex | default(omit) != item.criteriaAssetRegex | default(None) or
    ( __nexus_cleanup_policies__.json | selectattr('name', 'equalto', item.name) | first).criteriaReleaseType | default(omit) != item.criteriaReleaseType | default(None) or
    ( __nexus_cleanup_policies__.json | selectattr('name', 'equalto', item.name) | first).notes | default(omit) != item.notes | default(None) or
    ( __nexus_cleanup_policies__.json | selectattr('name', 'equalto', item.name) | first).format | default(omit) != item.format | default(None)

- name: Compare maven hosted repositories for changes
  set_fact:
    maven_hosted_repos_to_update: "{{ maven_hosted_repos_to_update + [ item ] }}"
  loop: "{{ final_nexus_repos_maven_hosted | list }}"
  # TODO: implement cleanup policy
  when: >
    (existing_maven_hosted_repos | selectattr('name', 'equalto', item.name) | first) is not defined or
    (existing_maven_hosted_repos | selectattr('name', 'equalto', item.name) | first).format != item.format or
    (existing_maven_hosted_repos | selectattr('name', 'equalto', item.name) | first).type != item.type or
    (existing_maven_hosted_repos | selectattr('name', 'equalto', item.name) | first).online != item.online or
    (existing_maven_hosted_repos | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName != item.storage.blobStoreName or
    (existing_maven_hosted_repos | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation != item.storage.strictContentTypeValidation or
    (existing_maven_hosted_repos | selectattr('name', 'equalto', item.name) | first).storage.writePolicy != item.storage.writePolicy or
    (existing_maven_hosted_repos | selectattr('name', 'equalto', item.name) | first).maven.versionPolicy != item.maven.versionPolicy or
    (existing_maven_hosted_repos | selectattr('name', 'equalto', item.name) | first).maven.layoutPolicy != item.maven.layoutPolicy or
    (existing_maven_hosted_repos | selectattr('name', 'equalto', item.name) | first).maven.contentDisposition != item.maven.contentDisposition

- name: Compare maven proxy repositories for changes
  set_fact:
    maven_proxy_repos_to_update: "{{ maven_proxy_repos_to_update + [ item ] }}"
  loop: "{{ final_nexus_repos_maven_proxy | list }}"
  # TODO: implement routingRule, replication and authentication
  when: >
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first) is not defined or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).format != item.format or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).type != item.type or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).online != item.online or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).storage.blobStoreName != item.storage.blobStoreName or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).storage.strictContentTypeValidation != item.storage.strictContentTypeValidation or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).proxy.remoteUrl != item.proxy.remoteUrl or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).proxy.contentMaxAge != item.proxy.contentMaxAge or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).proxy.metadataMaxAge != item.proxy.metadataMaxAge or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).negativeCache.enabled != item.negativeCache.enabled or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).negativeCache.timeToLive != item.negativeCache.timeToLive or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).httpClient.blocked != item.httpClient.blocked or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).httpClient.autoBlock != item.httpClient.autoBlock or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).httpClient.connection.retries != item.httpClient.connection.retries or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).httpClient.connection.userAgentSuffix != item.httpClient.connection.userAgentSuffix or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).httpClient.connection.timeout != item.httpClient.connection.timeout or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCircularRedirects != item.httpClient.connection.enableCircularRedirects or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).httpClient.connection.enableCookies != item.httpClient.connection.enableCookies or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).httpClient.connection.useTrustStore != item.httpClient.connection.useTrustStore or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).maven.versionPolicy != item.maven.versionPolicy or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).maven.layoutPolicy != item.maven.layoutPolicy or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).maven.contentDisposition | default(omit) != item.maven.contentDisposition | default(None) or
    (existing_maven_proxy_repos | selectattr('name', 'equalto', item.name) | first).cleanup.policyNames | default(omit) != item.cleanup.policyNames | default(None)

- name: Show maven_hosted_repos_to_update
  debug:
    var: maven_hosted_repos_to_update | length

- name: show maven_hosted_repos_to_create
  debug:
    var: maven_hosted_repos_to_create | length

- name: Show maven_hosted_repos_to_delete
  debug:
    var: maven_hosted_repos_to_delete | length

- name: Create configured Maven Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: maven
    type: hosted
    method: POST
  with_items:
    - "{{ maven_hosted_repos_to_create | default([]) }}"
  when: maven_hosted_repos_to_create | length > 0

- name: Create configured Maven Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: maven
    type: proxy
    method: POST
  with_items:
    - "{{ maven_proxy_repos_to_create | default([]) }}"
  when: maven_proxy_repos_to_create | length > 0

- name: Update configured Maven Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: maven
    type: hosted
    method: PUT
  with_items:
    - "{{ maven_hosted_repos_to_update | default([]) }}"
  when: maven_hosted_repos_to_update | length > 0

- name: Update configured Maven Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ item | default([]) }}"
    format: maven
    type: proxy
    method: PUT
  with_items:
    - "{{ maven_proxy_repos_to_update | default([]) }}"
  when: maven_proxy_repos_to_update | length > 0

- name: Update configured Cleanup Policies using Nexus API
  ansible.builtin.include_tasks: cleanup-policies.yml
  vars:
    policies: "{{ item | default([]) }}"
    method: PUT
  with_items:
    - "{{ nexus_repos_cleanup_policies_to_update | default([]) }}"
  when: nexus_repos_cleanup_policies_to_update | length > 0

- name: Delete Maven Hosted repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ maven_hosted_repos_to_delete | default([]) }}"
    format: maven
    type: hosted
    method: DELETE
  with_items:
    - "{{ maven_hosted_repos_to_delete | default([]) }}"
  when: maven_hosted_repos_to_delete | length > 0

- name: Delete Maven Proxy repositories using Nexus API
  ansible.builtin.include_tasks: repositories-api.yml
  vars:
    repos: "{{ maven_proxy_repos_to_delete | default([]) }}"
    format: maven
    type: proxy
    method: DELETE
  with_items:
    - "{{ maven_proxy_repos_to_delete | default([]) }}"
  when: maven_proxy_repos_to_delete | length > 0
